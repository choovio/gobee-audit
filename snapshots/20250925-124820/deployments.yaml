apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "116"
      kubernetes.io/change-cause: kubectl.exe set image deploy/alarms alarms=595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:0bbcc6ed30b9906e255de8f875c741e44df4f6dab30b349d69780d27acafdd90
        --namespace=gobee --record=true
    creationTimestamp: "2025-08-25T20:56:09Z"
    generation: 119
    name: alarms
    namespace: gobee
    resourceVersion: "11809078"
    uid: 9274d01a-ccfd-43f0-b8d7-b402b836bb1b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: alarms
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: alarms
          app.kubernetes.io/component: backend
          app.kubernetes.io/name: alarms
      spec:
        containers:
        - envFrom:
          - secretRef:
              name: timescale-secrets
          image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:0bbcc6ed30b9906e255de8f875c741e44df4f6dab30b349d69780d27acafdd90
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: alarms
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-29T23:32:32Z"
      lastUpdateTime: "2025-08-29T23:32:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-30T01:24:36Z"
      lastUpdateTime: "2025-09-25T18:09:13Z"
      message: ReplicaSet "alarms-77f95f6c7c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 119
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "135"
      kubernetes.io/change-cause: kubectl.exe set image deploy/bootstrap bootstrap=595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala:bootstrap-9608e04
        --namespace=gobee --record=true
    creationTimestamp: "2025-08-25T22:05:23Z"
    generation: 154
    name: bootstrap
    namespace: gobee
    resourceVersion: "11820659"
    uid: 1b701770-a9d2-48ed-a854-324eac440bf9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: bootstrap
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-08-26T12:00:19-07:00"
        creationTimestamp: null
        labels:
          app: bootstrap
          app.kubernetes.io/name: bootstrap
          app.kubernetes.io/part-of: magistrala
      spec:
        containers:
        - env:
          - name: MF_BOOTSTRAP_DB_URL
            valueFrom:
              secretKeyRef:
                key: DATABASE_URL
                name: bootstrap-secrets
          envFrom:
          - secretRef:
              name: bootstrap-secrets
          image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala:bootstrap-dev
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: bootstrap
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-30T02:01:23Z"
      lastUpdateTime: "2025-08-30T02:01:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-25T19:06:54Z"
      lastUpdateTime: "2025-09-25T19:06:54Z"
      message: ReplicaSet "bootstrap-5c476d9dd8" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 154
    readyReplicas: 1
    replicas: 2
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"certs"},"name":"certs","namespace":"gobee"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"certs"}},"template":{"metadata":{"labels":{"app":"certs"}},"spec":{"containers":[{"image":"595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala:certs-dev","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":10,"periodSeconds":20,"timeoutSeconds":2},"name":"certs","ports":[{"containerPort":8080}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":2,"periodSeconds":5,"timeoutSeconds":2}}]}}}}
    creationTimestamp: "2025-09-10T21:50:47Z"
    generation: 7
    labels:
      app: certs
    name: certs
    namespace: gobee
    resourceVersion: "11606550"
    uid: afaedfff-9a8a-45eb-a191-ea8184f8eb5f
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: certs
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: certs
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/certs@sha256:f7a667508fc42f5104139bee5364f155f8ef8e4f6d01227f157cb05fef257536
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          name: certs
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-10T23:44:43Z"
      lastUpdateTime: "2025-09-10T23:44:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-10T22:32:10Z"
      lastUpdateTime: "2025-09-25T00:16:42Z"
      message: ReplicaSet "certs-58464d846d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"domains"},"name":"domains","namespace":"gobee"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"domains"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"domains"}},"spec":{"containers":[{"image":"595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala:domains-dev","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":10,"periodSeconds":20,"timeoutSeconds":2},"name":"domains","ports":[{"containerPort":8080}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":2,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":2}}]}}}}
    creationTimestamp: "2025-09-10T21:50:48Z"
    generation: 7
    labels:
      app: domains
    name: domains
    namespace: gobee
    resourceVersion: "11606606"
    uid: 3bf78860-37d3-4222-bf91-022b29acf18f
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: domains
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: domains
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/domains@sha256:f7a667508fc42f5104139bee5364f155f8ef8e4f6d01227f157cb05fef257536
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          name: domains
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-10T21:50:48Z"
      lastUpdateTime: "2025-09-10T21:50:48Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-10T22:32:10Z"
      lastUpdateTime: "2025-09-25T00:16:44Z"
      message: ReplicaSet "domains-7dd7df878b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"http","app.kubernetes.io/name":"http"},"name":"http","namespace":"gobee"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"http"}},"template":{"metadata":{"labels":{"app":"http","app.kubernetes.io/name":"http"}},"spec":{"containers":[{"image":"595443389404.dkr.ecr.us-west-2.amazonaws.com/http-adapter@sha256:481e0789f954be2d4e3d27cbbfd81cd38c5c0fbdc4e965d72908fabe308bd8a0","livenessProbe":{"httpGet":{"path":"/healthz","port":8008}},"name":"http","ports":[{"containerPort":8008}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8008}}}]}}}}
    creationTimestamp: "2025-09-24T18:45:10Z"
    generation: 2
    labels:
      app: http
      app.kubernetes.io/name: http
    name: http
    namespace: gobee
    resourceVersion: "11606505"
    uid: 8bc10367-0c17-442f-9262-4b996965dc09
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: http
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: http
          app.kubernetes.io/name: http
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/http-adapter@sha256:481e0789f954be2d4e3d27cbbfd81cd38c5c0fbdc4e965d72908fabe308bd8a0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8008
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: http
          ports:
          - containerPort: 8008
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8008
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-24T18:45:11Z"
      lastUpdateTime: "2025-09-24T18:45:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-24T18:45:10Z"
      lastUpdateTime: "2025-09-25T00:16:41Z"
      message: ReplicaSet "http-65c5fb87d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "6"
      kubernetes.io/change-cause: mqtt-adapter -> mqtt-adapter-6ef9ab76ddc260750347cbeebe5614db703cfae9
    creationTimestamp: "2025-08-30T01:14:28Z"
    generation: 9
    name: mqtt-adapter
    namespace: gobee
    resourceVersion: "11811625"
    uid: e38ed4a5-9d26-4ee4-9076-2f907eba90ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: mqtt-adapter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mqtt-adapter
          app.kubernetes.io/component: backend
          app.kubernetes.io/name: mqtt-adapter
      spec:
        containers:
        - env:
          - name: NATS_URL
            value: nats:4222
          image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:e59a26211f4f0b48597c9566e9ad88d9b266072af54f763a9d3f15770c3c8ec3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: mqtt-adapter
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-30T01:19:32Z"
      lastUpdateTime: "2025-08-30T01:19:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-25T18:20:08Z"
      lastUpdateTime: "2025-09-25T18:20:08Z"
      message: ReplicaSet "mqtt-adapter-6454c88968" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 9
    readyReplicas: 1
    replicas: 2
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      gobee.io/restartedAt: 2025-09-18T11:01:51
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"nats","namespace":"gobee"},"spec":{"replicas":1,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"nats"}},"template":{"metadata":{"labels":{"app":"nats"}},"spec":{"containers":[{"args":["-js","-m","8222"],"image":"nats@sha256:eca033f54dbb5d0a5df80c60ff229e53c71de63a8b4ddd0c2f04dd3e55d287df","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":5,"periodSeconds":20,"tcpSocket":{"port":4222}},"name":"nats","ports":[{"containerPort":4222,"name":"client"},{"containerPort":8222,"name":"monitor"}],"readinessProbe":{"initialDelaySeconds":3,"periodSeconds":10,"tcpSocket":{"port":4222}}}]}}}}
      kubernetes.io/change-cause: kubectl.exe set image deployment/nats nats=595443389404.dkr.ecr.us-west-2.amazonaws.com/nats@sha256:820a97ef8a0e8e4b1f1c940c1fbf92e57ad548429dd20754de24ffe4f08996a3
        --namespace=gobee --record=true
    creationTimestamp: "2025-08-30T00:52:20Z"
    generation: 9
    name: nats
    namespace: gobee
    resourceVersion: "11807365"
    uid: 85a5f262-888e-41b0-b2a9-8c372b940d48
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: nats
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-18T11:04:16-07:00"
        creationTimestamp: null
        labels:
          app: nats
      spec:
        containers:
        - args:
          - -js
          - -m
          - "8222"
          image: nats@sha256:eca033f54dbb5d0a5df80c60ff229e53c71de63a8b4ddd0c2f04dd3e55d287df
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 4222
            timeoutSeconds: 1
          name: nats
          ports:
          - containerPort: 4222
            name: client
            protocol: TCP
          - containerPort: 8222
            name: monitor
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 4222
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-18T19:02:14Z"
      lastUpdateTime: "2025-09-18T19:02:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-25T01:01:53Z"
      lastUpdateTime: "2025-09-25T18:00:42Z"
      message: ReplicaSet "nats-7b678b459c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 9
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-08-25T20:56:07Z"
    generation: 3
    name: nginx
    namespace: gobee
    resourceVersion: "11795403"
    uid: d5f32cfa-d84b-4a41-81d0-44fe200abe0a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:e688fed0b0c7513a63364959e7d389c37ac8ecac7a6c6a31455eca2f5a71ab8b
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-28T00:21:59Z"
      lastUpdateTime: "2025-08-28T00:21:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-25T20:56:07Z"
      lastUpdateTime: "2025-09-25T16:57:56Z"
      message: ReplicaSet "nginx-74778b47bf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-08-30T02:20:18Z"
    generation: 35
    name: pgreader
    namespace: gobee
    resourceVersion: "11812484"
    uid: 2b19786b-6eee-4415-8bb3-e51131386779
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pgreader
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pgreader
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:e688fed0b0c7513a63364959e7d389c37ac8ecac7a6c6a31455eca2f5a71ab8b
          imagePullPolicy: IfNotPresent
          name: pgreader
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-25T18:24:11Z"
      lastUpdateTime: "2025-09-25T18:24:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-02T19:56:53Z"
      lastUpdateTime: "2025-09-25T18:24:11Z"
      message: ReplicaSet "pgreader-64c74cc455" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 35
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "68"
      kubernetes.io/change-cause: pgreader -> pgreader-bbf5a464b2f25438b09afb95e412fc31a2b47480
    creationTimestamp: "2025-08-25T20:56:11Z"
    generation: 76
    name: postgres-reader
    namespace: gobee
    resourceVersion: "11809284"
    uid: 36d1e9c9-1707-4864-89bc-e9f5cb35819c
  spec:
    paused: true
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres-reader
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-08-29T13:27:02-07:00"
        creationTimestamp: null
        labels:
          app: postgres-reader
      spec:
        containers:
        - args:
          - -db-url=$(DATABASE_URL)
          command:
          - /exe
          env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                key: DATABASE_URL
                name: timescale-secrets
          envFrom:
          - secretRef:
              name: timescale-secrets
          image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:9098f875d618ea1e85177bd409ee6c5b1ef7e211bac824afb0eaf5303cb8f459
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgres-reader
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-29T20:27:09Z"
      lastUpdateTime: "2025-08-29T20:27:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-15T23:45:50Z"
      lastUpdateTime: "2025-09-15T23:45:50Z"
      message: Deployment is paused
      reason: DeploymentPaused
      status: Unknown
      type: Progressing
    observedGeneration: 76
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "74"
      kubernetes.io/change-cause: pgwriter -> pgwriter-bbf5a464b2f25438b09afb95e412fc31a2b47480
    creationTimestamp: "2025-08-25T20:56:11Z"
    generation: 77
    name: postgres-writer
    namespace: gobee
    resourceVersion: "11811631"
    uid: e4dfd9f3-2443-41dd-b7af-48dd55fa2cd3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres-writer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-08-29T13:18:16-07:00"
        creationTimestamp: null
        labels:
          app: postgres-writer
      spec:
        containers:
        - envFrom:
          - secretRef:
              name: timescale-secrets
          image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:2d74974b546525b4e1f34ce7ac952fdf7f417ee2f8e00312dbccdd238a08999d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9010
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgres-writer
          ports:
          - containerPort: 9010
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9010
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-29T20:18:18Z"
      lastUpdateTime: "2025-08-29T20:18:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-25T18:20:09Z"
      lastUpdateTime: "2025-09-25T18:20:09Z"
      message: ReplicaSet "postgres-writer-5dc454674f" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 77
    readyReplicas: 1
    replicas: 2
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-08-25T20:56:08Z"
    generation: 7
    name: provision
    namespace: gobee
    resourceVersion: "11797203"
    uid: c0b1ba6e-fdc2-419b-9393-3753a32093be
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: provision
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: provision
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:8fdee43e9bad1028ba5a91438eb6292454b96f76cf27bdaac590cd2ce0c98f08
          imagePullPolicy: IfNotPresent
          name: provision
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-28T00:21:59Z"
      lastUpdateTime: "2025-08-28T00:21:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-25T20:56:08Z"
      lastUpdateTime: "2025-09-25T17:07:02Z"
      message: ReplicaSet "provision-749d885b49" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "70"
      kubernetes.io/change-cause: re -> re-ca73523145c4c1afa6cbcb9994f3c1fc4c589841
    creationTimestamp: "2025-08-25T20:56:10Z"
    generation: 71
    name: re
    namespace: gobee
    resourceVersion: "11809427"
    uid: 04ae7327-2b0e-48ba-9aaf-3e9a379b4d3e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: re
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          re/email-template-version: v1
        creationTimestamp: null
        labels:
          app: re
          app.kubernetes.io/component: backend
          app.kubernetes.io/name: re
      spec:
        containers:
        - env:
          - name: MG_EMAIL_TEMPLATE
            value: /etc/email/email.tmpl
          envFrom:
          - secretRef:
              name: smtp-secrets
          image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:85ac2283375a019d5cb4ba9478139a06c33a80cbf71a2c7c5b188a128ee4e597
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: re
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/email
            name: email-template
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: email.tmpl
              path: email.tmpl
            name: email-template
          name: email-template
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-30T00:33:39Z"
      lastUpdateTime: "2025-08-30T00:33:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-02T21:00:16Z"
      lastUpdateTime: "2025-09-25T18:10:19Z"
      message: ReplicaSet "re-859d5c9976" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 71
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "85"
      kubernetes.io/change-cause: reports -> reports-45075eec054539fa282129e171c954a264cc845d
    creationTimestamp: "2025-08-25T20:56:09Z"
    generation: 87
    name: reports
    namespace: gobee
    resourceVersion: "11809448"
    uid: 13d506bc-b7f4-49b6-a1ed-e3c3100a89e7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: reports
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-10T14:19:06-07:00"
        creationTimestamp: null
        labels:
          app: reports
          app.kubernetes.io/component: backend
          app.kubernetes.io/name: reports
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                key: DATABASE_URL
                name: timescale-secrets
          envFrom:
          - secretRef:
              name: timescale-secrets
          image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:f7a667508fc42f5104139bee5364f155f8ef8e4f6d01227f157cb05fef257536
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: reports
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-02T19:17:34Z"
      lastUpdateTime: "2025-09-02T19:17:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-10T21:10:45Z"
      lastUpdateTime: "2025-09-25T18:10:20Z"
      message: ReplicaSet "reports-556c5d9f8f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 87
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"things"},"name":"things","namespace":"gobee"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"things"}},"template":{"metadata":{"labels":{"app":"things"}},"spec":{"containers":[{"image":"595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala:things-dev","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":10,"periodSeconds":20,"timeoutSeconds":2},"name":"things","ports":[{"containerPort":8080}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":2,"periodSeconds":5,"timeoutSeconds":2}}]}}}}
    creationTimestamp: "2025-09-10T21:50:48Z"
    generation: 7
    labels:
      app: things
    name: things
    namespace: gobee
    resourceVersion: "11606723"
    uid: f828a558-8a43-4d61-8eaa-0243de7eb277
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: things
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: things
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/things@sha256:f7a667508fc42f5104139bee5364f155f8ef8e4f6d01227f157cb05fef257536
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          name: things
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-10T23:44:41Z"
      lastUpdateTime: "2025-09-10T23:44:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-10T22:32:09Z"
      lastUpdateTime: "2025-09-25T00:16:48Z"
      message: ReplicaSet "things-748c8b9bdd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-08-30T02:20:08Z"
    generation: 34
    name: timescale-reader
    namespace: gobee
    resourceVersion: "11812526"
    uid: 69d0c1af-5aa1-4a39-99ca-079422f3f128
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: timescale-reader
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: timescale-reader
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:f7a667508fc42f5104139bee5364f155f8ef8e4f6d01227f157cb05fef257536
          imagePullPolicy: IfNotPresent
          name: timescale-reader
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-25T18:24:12Z"
      lastUpdateTime: "2025-09-25T18:24:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-30T02:20:08Z"
      lastUpdateTime: "2025-09-25T18:24:12Z"
      message: ReplicaSet "timescale-reader-5fb866d5fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 34
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-08-30T02:20:07Z"
    generation: 34
    name: timescale-writer
    namespace: gobee
    resourceVersion: "11812545"
    uid: e876fb6a-f553-4d2a-9efb-dc8b144fc179
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: timescale-writer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: timescale-writer
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala@sha256:f7a667508fc42f5104139bee5364f155f8ef8e4f6d01227f157cb05fef257536
          imagePullPolicy: IfNotPresent
          name: timescale-writer
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-25T18:24:12Z"
      lastUpdateTime: "2025-09-25T18:24:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-30T02:20:07Z"
      lastUpdateTime: "2025-09-25T18:24:12Z"
      message: ReplicaSet "timescale-writer-fddb95956" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 34
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"users"},"name":"users","namespace":"gobee"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"users"}},"template":{"metadata":{"labels":{"app":"users"}},"spec":{"containers":[{"image":"595443389404.dkr.ecr.us-west-2.amazonaws.com/magistrala:users-dev","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":10,"periodSeconds":20,"timeoutSeconds":2},"name":"users","ports":[{"containerPort":8080}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":2,"periodSeconds":5,"timeoutSeconds":2}}]}}}}
    creationTimestamp: "2025-09-10T21:50:49Z"
    generation: 7
    labels:
      app: users
    name: users
    namespace: gobee
    resourceVersion: "11606901"
    uid: c00d665e-dc35-4efc-b9d3-0d9d41209981
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: users
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: users
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/users@sha256:f7a667508fc42f5104139bee5364f155f8ef8e4f6d01227f157cb05fef257536
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          name: users
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-10T23:44:43Z"
      lastUpdateTime: "2025-09-10T23:44:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-10T22:32:08Z"
      lastUpdateTime: "2025-09-25T00:17:16Z"
      message: ReplicaSet "users-5577fcb44f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"ws","app.kubernetes.io/name":"ws"},"name":"ws","namespace":"gobee"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ws"}},"template":{"metadata":{"labels":{"app":"ws","app.kubernetes.io/name":"ws"}},"spec":{"containers":[{"image":"595443389404.dkr.ecr.us-west-2.amazonaws.com/ws-adapter@sha256:c021866ee8461b7ed2aa5955cc970948ec63ef83bc5bbd52cbce63b069981fa6","livenessProbe":{"httpGet":{"path":"/healthz","port":8186}},"name":"ws","ports":[{"containerPort":8186}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8186}}}]}}}}
    creationTimestamp: "2025-09-24T18:45:11Z"
    generation: 2
    labels:
      app: ws
      app.kubernetes.io/name: ws
    name: ws
    namespace: gobee
    resourceVersion: "11606668"
    uid: 81a0cfcf-0b2f-413b-b0b9-507741f2dda1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ws
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ws
          app.kubernetes.io/name: ws
      spec:
        containers:
        - image: 595443389404.dkr.ecr.us-west-2.amazonaws.com/ws-adapter@sha256:c021866ee8461b7ed2aa5955cc970948ec63ef83bc5bbd52cbce63b069981fa6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8186
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ws
          ports:
          - containerPort: 8186
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8186
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-24T18:45:12Z"
      lastUpdateTime: "2025-09-24T18:45:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-24T18:45:11Z"
      lastUpdateTime: "2025-09-25T00:16:45Z"
      message: ReplicaSet "ws-585665cfd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
